{"ast":null,"code":"import _classCallCheck from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/src/components/ObjectiveCard/ObjectiveCard.js\";\nimport React, { Component } from 'react';\nimport ProgressSelector from './ProgressSelector';\n\nvar ObjectiveCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ObjectiveCard, _Component);\n\n  function ObjectiveCard(_props) {\n    var _this;\n\n    _classCallCheck(this, ObjectiveCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ObjectiveCard).call(this, _props));\n\n    _this.handleStatusEditClick = function () {\n      _this.setState({\n        editStatusClicked: true,\n        statusSaved: false\n      });\n    };\n\n    _this.handleSetSavedProgress = function (props) {\n      _this.setState({\n        status: props.selection,\n        statusSaved: true,\n        editStatusClicked: false\n      });\n    };\n\n    _this.handleOpenEvidence = function () {\n      window.open(_this.state.evidence);\n    };\n\n    _this.handleSetupEvidence = function () {\n      _this.setState({\n        addEvidenceClicked: true,\n        evidenceSaved: false\n      });\n    };\n\n    _this.handleSaveEvidence = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        addEvidenceClicked: false,\n        evidenceSaved: true,\n        editEvidenceClicked: false\n      });\n    };\n\n    _this.handleEvidenceChange = function (event) {\n      _this.setState({\n        evidence: event.target.value\n      });\n    };\n\n    _this.handleEditEvidence = function (event) {\n      _this.setState({\n        editEvidenceClicked: true\n      });\n    };\n\n    _this.state = {\n      status: _this.props.status,\n      editClicked: false,\n      addEvidenceClicked: false,\n      statusSaved: true,\n      evidenceSaved: false,\n      evidence: ''\n    };\n    _this.handleSetSavedProgress = _this.handleSetSavedProgress.bind(_assertThisInitialized(_this));\n    _this.handleOpenEvidence = _this.handleOpenEvidence.bind(_assertThisInitialized(_this));\n    _this.handleStatusEditClick = _this.handleStatusEditClick.bind(_assertThisInitialized(_this));\n    _this.handleEvidenceChange = _this.handleEvidenceChange.bind(_assertThisInitialized(_this));\n    _this.handleSaveEvidence = _this.handleSaveEvidence.bind(_assertThisInitialized(_this));\n    _this.handleSetupEvidence = _this.handleSetupEvidence.bind(_assertThisInitialized(_this));\n    _this.handleEditEvidence = _this.handleEditEvidence.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ObjectiveCard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        className: \"objective-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"objective-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"objective-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"objective-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Status:\\xA0\", this.state.statusSaved ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.status, React.createElement(\"button\", {\n        className: \"edit\",\n        onClick: this.handleStatusEditClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Edit\")) : null, this.state.editStatusClicked ? React.createElement(ProgressSelector, {\n        saveHandler: this.handleSetSavedProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : null)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"objective-notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.notes), React.createElement(\"div\", {\n        className: \"Evidence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Evidence:\\xA0\", this.state.evidenceSaved && !this.state.evidence.trim() == \"\" && !this.state.editEvidenceClicked ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Submitted\", !this.state.editEvidenceClicked ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleOpenEvidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Open Evidence\"), React.createElement(\"button\", {\n        onClick: this.handleEditEvidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Edit Evidence\")) : null) : this.state.addEvidenceClicked ? React.createElement(\"form\", {\n        onSubmit: this.handleSaveEvidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"link\",\n        onChange: this.handleEvidenceChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Save Evidence\")) : !this.state.editEvidenceClicked ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Not Submitted \", React.createElement(\"button\", {\n        onClick: this.handleSetupEvidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Add Evidence\")) : null, this.state.editEvidenceClicked ? React.createElement(\"form\", {\n        onSubmit: this.handleSaveEvidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"link\",\n        onChange: this.handleEvidenceChange,\n        value: this.state.evidence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Save Evidence\")) : null)), React.createElement(\"button\", {\n        className: \"edit-obj\",\n        onClick: this.props.editClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"edit\")));\n    }\n  }]);\n\n  return ObjectiveCard;\n}(Component);\n\nexport default ObjectiveCard;","map":{"version":3,"sources":["/Users/wgoldsworthy/Documents/Bootcamp/ANDCoach/andcoach/src/components/ObjectiveCard/ObjectiveCard.js"],"names":["React","Component","ProgressSelector","ObjectiveCard","props","handleStatusEditClick","setState","editStatusClicked","statusSaved","handleSetSavedProgress","status","selection","handleOpenEvidence","window","open","state","evidence","handleSetupEvidence","addEvidenceClicked","evidenceSaved","handleSaveEvidence","event","preventDefault","editEvidenceClicked","handleEvidenceChange","target","value","handleEditEvidence","editClicked","bind","title","notes","trim","editClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ProgressSelector from './ProgressSelector';\n\nclass ObjectiveCard extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      status: this.props.status,\n      editClicked: false,\n      addEvidenceClicked: false,\n      statusSaved: true,\n      evidenceSaved: false,\n      evidence: '',\n    }\n\n    this.handleSetSavedProgress = this.handleSetSavedProgress.bind(this);\n    this.handleOpenEvidence = this.handleOpenEvidence.bind(this);\n    this.handleStatusEditClick = this.handleStatusEditClick.bind(this);\n    this.handleEvidenceChange = this.handleEvidenceChange.bind(this);\n    this.handleSaveEvidence = this.handleSaveEvidence.bind(this);\n    this.handleSetupEvidence = this.handleSetupEvidence.bind(this);\n    this.handleEditEvidence =  this.handleEditEvidence.bind(this);\n  }\n\n\n  handleStatusEditClick = () => {\n    this.setState({editStatusClicked: true, statusSaved: false}); \n  }\n\n  handleSetSavedProgress = (props) => {\n    this.setState({status: props.selection, statusSaved: true, editStatusClicked: false});\n  }\n\n  handleOpenEvidence = () => {\n    window.open(this.state.evidence);\n  }\n\n  handleSetupEvidence = () => {\n    this.setState({addEvidenceClicked: true, evidenceSaved: false});\n  }\n\n  handleSaveEvidence = (event) => {\n    event.preventDefault();\n    this.setState({addEvidenceClicked: false, evidenceSaved: true, editEvidenceClicked: false});\n  }\n\n  handleEvidenceChange = (event) => {\n    this.setState({evidence: event.target.value});\n  }\n\n  handleEditEvidence = (event) => {\n    this.setState({editEvidenceClicked: true});\n  }\n\n  render() {\n    return (\n      <li className='objective-card'>\n        <div className = 'objective-details'>\n          <div>\n            <div className = 'objective-header'>\n              <div className='objective-title'>{this.props.title}</div>\n              <div className='status'>\n                Status:&nbsp;\n                {\n                  this.state.statusSaved ? \n                    <div>\n                      {this.state.status}\n                      <button\n                        className=\"edit\"\n                        onClick={this.handleStatusEditClick}>\n                        Edit\n                      </button>\n                    </div> : null\n                }\n                \n                {\n                  this.state.editStatusClicked ? <ProgressSelector saveHandler = {this.handleSetSavedProgress}/> : null \n                }\n              </div>\n            </div>\n            <hr />\n            <div className='objective-notes'>\n              {this.props.notes}\n            </div>\n            <div className = \"Evidence\">\n            Evidence:&nbsp;\n              {this.state.evidenceSaved && !this.state.evidence.trim()==\"\" && !this.state.editEvidenceClicked ? \n              <div>\n                  Submitted\n                  {!this.state.editEvidenceClicked ?\n                  <div>\n                    <button onClick={this.handleOpenEvidence}>Open Evidence</button>\n                    <button onClick={this.handleEditEvidence}>Edit Evidence</button>\n                </div> :\n                    null\n                  }\n                \n              </div>\n              :\n                this.state.addEvidenceClicked ?\n                  <form onSubmit={this.handleSaveEvidence}>\n                    <input type='link' onChange={this.handleEvidenceChange}></input>\n                    <button type='submit'>Save Evidence</button>\n                  </form>\n                : \n                  !this.state.editEvidenceClicked \n                  ?\n                    <div>\n                      Not Submitted <button onClick={this.handleSetupEvidence}>Add Evidence</button>\n                    </div> \n                  : null\n              }\n              {this.state.editEvidenceClicked ?\n                <form onSubmit={this.handleSaveEvidence}>\n                  <input type='link' onChange={this.handleEvidenceChange} value={this.state.evidence}></input>\n                  <button type='submit'>Save Evidence</button>\n                </form>\n              : null\n              } \n            </div>\n          </div>\n          <button\n            className=\"edit-obj\"\n            onClick={this.props.editClick}>\n              edit\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default ObjectiveCard;\n"]},"metadata":{},"sourceType":"module"}